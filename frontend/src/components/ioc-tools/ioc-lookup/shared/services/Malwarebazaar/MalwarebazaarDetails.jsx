import React from 'react';

import Box from "@mui/material/Box";
import Card from "@mui/material/Card";
import CardContent from "@mui/material/CardContent";
import Typography from "@mui/material/Typography";
import InfoIcon from '@mui/icons-material/Info';
import CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';
import ReportProblemIcon from '@mui/icons-material/ReportProblem';
import Grid from '@mui/material/Grid';
import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import ListItemText from "@mui/material/ListItemText";

import NoDetails from '../NoDetails'; 

export default function MalwarebazaarDetails({ result, ioc }) {

  if (!result) {
    return (
      <Box sx={{ margin: 1, display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: 100 }}>
        <NoDetails message="Loading MalwareBazaar details..." />
      </Box>
    );
  }

  if (result.error) { 
    return (
      <Box sx={{ margin: 1, display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: 100 }}>
        <NoDetails message={`Error fetching MalwareBazaar details: ${result.message || result.error}`} />
      </Box>
    );
  }

  const queryStatus = result.query_status;
  const malwareData = (queryStatus === 'ok' && Array.isArray(result.data) && result.data.length > 0) ? result.data[0] : null;

  let content;

  if (queryStatus === 'ok' && malwareData) {
    content = (
      <>
        <Grid container spacing={1} alignItems="center" mb={1}>
            <ReportProblemIcon color="error" />
            <Typography variant="h6" component="div" sx={{ ml: 1, color:'error.main' }}>
                Malware Sample Identified
            </Typography>
        </Grid>
        <Typography variant="body1" gutterBottom>
          This hash is associated with a known malware sample in the MalwareBazaar database.
        </Typography>
        <Typography variant="subtitle2" color="text.secondary" gutterBottom>
          Key details from the first match (full detailed view pending implementation):
        </Typography>
        <List dense>
            {malwareData.sha256_hash && <ListItem><ListItemText primary="SHA256:" secondary={malwareData.sha256_hash} /></ListItem>}
            {malwareData.signature && <ListItem><ListItemText primary="Signature:" secondary={malwareData.signature} /></ListItem>}
            {malwareData.file_name && <ListItem><ListItemText primary="File Name(s):" secondary={Array.isArray(malwareData.file_name) ? malwareData.file_name.join(', ') : malwareData.file_name} /></ListItem>}
            {malwareData.file_type_mime && <ListItem><ListItemText primary="MIME Type:" secondary={malwareData.file_type_mime} /></ListItem>}
            {malwareData.tags && malwareData.tags.length > 0 && <ListItem><ListItemText primary="Tags:" secondary={malwareData.tags.join(', ')} /></ListItem>}
        </List>
        <Typography variant="caption" display="block" mt={2}>
          <i>Further details (like download links, full analysis) will be implemented later.</i>
        </Typography>
      </>
    );
  } else if (queryStatus === 'hash_not_found') {
    content = (
      <Box textAlign="center">
        <CheckCircleOutlineIcon sx={{ fontSize: 40, color: 'success.main', mb:1 }}/>
        <Typography variant="h6" component="div" gutterBottom>
          Hash Not Found
        </Typography>
        <Typography variant="body1" color="text.secondary">
          The hash ({ioc}) was not found in the MalwareBazaar database.
        </Typography>
      </Box>
    );
  } else if (queryStatus === 'illegal_hash' || queryStatus === 'no_hash_provided') {
    content = (
       <Box textAlign="center">
        <ReportProblemIcon sx={{ fontSize: 40, color: 'warning.main', mb:1 }}/>
        <Typography variant="h6" component="div" gutterBottom>
          Query Error
        </Typography>
        <Typography variant="body1" color="text.secondary">
          Status: {queryStatus.replace(/_/g, ' ')}. Please check the hash format.
        </Typography>
      </Box>
    );
  } else { 
    content = (
      <Box textAlign="center">
        <InfoIcon sx={{ fontSize: 40, color: 'action.active', mb:1 }}/>
        <Typography variant="h6" component="div" gutterBottom>
          Status: {queryStatus || "Unknown"}
        </Typography>
        <Typography variant="body1" color="text.secondary">
          Could not retrieve specific details for this hash from MalwareBazaar at the moment.
        </Typography>
      </Box>
    );
  }

  return (
    <Box sx={{ margin: 1, mt:0 }}> 
      <Card elevation={0} sx={{ borderRadius: 2, border: '1px solid', borderColor: 'divider' }}>
        <CardContent>
          {content}
        </CardContent>
      </Card>
    </Box>
  );
}